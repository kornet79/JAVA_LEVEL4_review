래퍼 클래스
기본형의 한계
- 자바는 객체지향 언어이다.
- 자바 언어 안에 객체가 아닌것들이 존재한다.
- int, double 등과 같은 기본형 타입이다.
- 기본형은 객체가 아니기 때문에 다음과 같은 한계가 있다.ㅣ
1. 객체 아님 : 기본형 데이터는 객체가 아니기 때문에, 객체 지향 프로그래밍의 장점을 살릴수가 없다.
            예를 들어 객체는 유용한 메소드를 제공할 수 있는데, 기본형은 객체가 아니므로 메서드를
            제공할 수 없다.
   1-1. 추가로 객체 참조가 필요한 컬렉션 프레임워크를 사용할 수 없다. 그리고 제네릭도 사용할 수 없다.
2. null 값을 가질 수 없음:기본형 데이터 타입은 null값을 가질 수 없다. 때로는 데이터가 없음 이라는
 상태를 나타내야 할 필요가 있는데, 기본형은 항상 값을 가지기 때문에 이런 표현을 할 수 없다.

기본형의 한계를 이해하기 위해, 두 값을 비교해서 다음과 같은 결과를 출력하는 간단한 코드를 작성해볼 것이다!
- 왼쪽이 더 작다 -1
- 두 값이 같아 0
- 왼쪽의 값이 더 크다 1

자바 래퍼 클래스?
- 래퍼 클래스는 쉽게 말해서 기본형의 객체 버전이다.
- 자바는기본형에 대응하는 래퍼클래스를 기본으로 제공한다.
 byte -> Byte
 short -> Short
 int -> Integer
 long -> Long
 float -> Float
 double -> Double
 char > Character
 boolean -< Boolean
 - 자바에서 제공하는 래퍼클래스의 특징
 1. 불변이다.
 2. equals로 비교해야 한다.
